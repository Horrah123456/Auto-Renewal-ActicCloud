name: Auto Renewal Bot

# 工作流的触发条件
on:
  # 允许在GitHub页面上手动触发此工作流，方便测试
  workflow_dispatch:

  # 定时任务：使用Cron语法
  # 下面的设置表示在每个月的4, 8, 12, 16, 20, 24, 28号的凌晨3点（UTC时间）运行
  schedule:
    - cron: '0 3 */4 * *'

# 定义一个或多个任务
jobs:
  run-renewal:
    # 使用最新的Ubuntu虚拟环境来运行我们的任务
    runs-on: ubuntu-latest

    # 定义任务的步骤
    steps:
      # 第一步：从仓库中拉取我们的代码
      - name: Checkout repository
        uses: actions/checkout@v4

      # 第二步：设置Python环境
      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: '3.9' # 使用与我们本地一致的Python版本

      # 第三步：安装代码中所有的依赖库
      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install -r requirements.txt

      # 【新增的调试步骤】在运行主脚本前，检查所有Secrets是否可用
      - name: Debug Secrets Availability
        run: |
          echo "Checking for secrets availability..."
          if [ -n "${{ secrets.USERNAME }}" ]; then echo "USERNAME: Found"; else echo "USERNAME: !!! NOT FOUND !!!"; fi
          if [ -n "${{ secrets.PASSWORD }}" ]; then echo "PASSWORD: Found"; else echo "PASSWORD: !!! NOT FOUND !!!"; fi
          if [ -n "${{ secrets.PRODUCT_ID }}" ]; then echo "PRODUCT_ID: Found"; else echo "PRODUCT_ID: !!! NOT FOUND !!!"; fi
          if [ -n "${{ secrets.BOT_TOKEN }}" ]; then echo "BOT_TOKEN: Found"; else echo "BOT_TOKEN: !!! NOT FOUND !!!"; fi
          if [ -n "${{ secrets.CHAT_ID }}" ]; then echo "CHAT_ID: Found"; else echo "CHAT_ID: !!! NOT FOUND !!!"; fi
          if [ -n "${{ secrets.SCRIPT_SECRET_KEY }}" ]; then echo "SCRIPT_SECRET_KEY: Found"; else echo "SCRIPT_SECRET_KEY: !!! NOT FOUND !!!"; fi

      # 第四步：运行我们的主脚本
      - name: Run the renewal script
        # 将我们设置的Secrets作为环境变量注入到运行环境中
        env:
          USERNAME: ${{ secrets.USERNAME }}
          PASSWORD: ${{ secrets.PASSWORD }}
          PRODUCT_ID: ${{ secrets.PRODUCT_ID }}
          BOT_TOKEN: ${{ secrets.BOT_TOKEN }}
          CHAT_ID: ${{ secrets.CHAT_ID }}
          SCRIPT_SECRET_KEY: ${{ secrets.SCRIPT_SECRET_KEY }}
        run: python main.py